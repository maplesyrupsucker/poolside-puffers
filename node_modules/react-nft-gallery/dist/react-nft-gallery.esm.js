import React, { useState, useEffect } from 'react';

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var runtime_1 = createCommonjsModule(function (module) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined$1; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined$1) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined$1;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined$1;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined$1;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined$1, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined$1;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined$1;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined$1;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined$1;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined$1;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   module.exports 
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}
});

// This avoids adding an extra prod dependency like `cn` just to concatenate classNames.
var joinClassNames = function joinClassNames() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return args.join(' ').trim();
};
var getAssetTitle = function getAssetTitle(asset) {
  return asset.name || "#" + asset.token_id;
};
var isEnsDomain = function isEnsDomain(ownerAddress) {
  return ownerAddress.includes('.eth');
};

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z = ".perfundo__overlay{display:flex;visibility:hidden;position:fixed;top:0;right:0;bottom:0;left:0;z-index:999;justify-content:center;align-items:center;background-color:rgba(0,0,0,.9)}.perfundo__overlay.is-active,.perfundo__overlay:target{visibility:visible}.perfundo__content{max-height:100%;overflow:auto}.is-active>.perfundo__content,:target>.perfundo__content{-webkit-animation:.4s ease-out .2s both;animation:.4s ease-out .2s both;-webkit-animation-name:inherit;animation-name:inherit}.perfundo__html{padding:2em;max-width:42em;background-color:#fff}.perfundo__figure{display:none;margin:1.5em}.is-active>.perfundo__figure,:target>.perfundo__figure{display:block}.perfundo__figcaption{color:#fff}.perfundo__image{max-width:100%}.perfundo__control{position:absolute;width:3em;height:3em;background-position:50%;background-size:cover;text-indent:-999em}.perfundo__close{top:1em;right:1em;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Cpath fill='%23fff' d='M21.7 10.3c-.4-.4-1-.4-1.4 0L16 14.6l-4.2-4.2c-.4-.4-1-.4-1.4 0-.4.4-.4 1 0 1.4l4.2 4.2-4.3 4.3c-.4.4-.4 1 0 1.4.4.4 1 .4 1.4 0l4.3-4.3 4.2 4.2c.4.4 1 .4 1.4 0 .4-.4.4-1 0-1.4L17.4 16l4.3-4.3c.4-.4.4-1 0-1.4zM16 0C7.2 0 0 7.2 0 16s7.2 16 16 16 16-7.2 16-16S24.8 0 16 0zm0 30C8.3 30 2 23.7 2 16S8.3 2 16 2s14 6.3 14 14-6.3 14-14 14z'/%3E%3C/svg%3E\")}.perfundo__prev{left:2em;transform:rotate(180deg)}.perfundo__next{right:2em}.perfundo__untarget{position:fixed;top:0}.perfundo__next,.perfundo__prev{top:50%;margin-top:-1.5em;opacity:.2;transition:opacity .2s;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='44.1' height='94.7'%3E%3Cpath fill='%23fff' d='M44.1 47.3L1.5 94.7 0 93.3l41.4-46L0 1.3 1.5 0l42.6 47.3z'/%3E%3C/svg%3E\")}.perfundo__next:focus,.perfundo__next:hover,.perfundo__prev:focus,.perfundo__prev:hover{opacity:1}";
styleInject(css_248z,{"insertAt":"top"});

var Lightbox = function Lightbox(_ref) {
  var asset = _ref.asset,
      index = _ref.index,
      setLightboxIndex = _ref.setLightboxIndex;
  return React.createElement("div", {
    id: "lightbox-" + index,
    className: "perfundo__overlay",
    onClick: function onClick() {
      window.location.assign('#lightbox-untarget');
    }
  }, React.createElement("figure", {
    className: "perfundo__content perfundo__figure",
    onClick: function onClick(evt) {
      // Prevents clicks on the image triggering `#lightbox-untarget`.
      evt.stopPropagation();
    }
  }, React.createElement("img", {
    className: "perfundo__image",
    src: asset.image_url,
    loading: "lazy"
  }), React.createElement("div", {
    className: "rnftg-text-gray-200"
  }, React.createElement("div", null, getAssetTitle(asset)), React.createElement("div", null, asset.collection.name))), React.createElement("a", {
    href: "#lightbox-untarget",
    className: "perfundo__close perfundo__control"
  }, "Close"), React.createElement("a", {
    className: "perfundo__prev perfundo__control",
    onClick: function onClick(evt) {
      evt.stopPropagation();
      setLightboxIndex(index - 1);
    },
    href: "#lightbox-" + (index - 1)
  }, "Prev"), React.createElement("a", {
    className: "perfundo__next perfundo__control",
    onClick: function onClick(evt) {
      evt.stopPropagation();
      setLightboxIndex(index + 1);
    },
    href: "#lightbox-" + (index + 1)
  }, "Next"));
};

var css_248z$1 = ".rnftg-item{width:auto}.rnftg-item__img-wrapper{width:auto;height:20rem}.rnftg--inline .rnftg-item{width:12rem}.rnftg--inline .rnftg-item__img-wrapper{width:12rem;height:12rem}@media (min-width:768px){.rnftg--inline .rnftg-item{width:16rem}.rnftg--inline .rnftg-item__img-wrapper{width:16rem;height:16rem}}@media (min-width:1024px){.rnftg--inline .rnftg-item{width:20rem}.rnftg--inline .rnftg-item__img-wrapper{width:20rem;height:20rem}}";
styleInject(css_248z$1,{"insertAt":"top"});

var ExternalLink = function ExternalLink(_ref) {
  var href = _ref.href,
      children = _ref.children;
  return React.createElement("a", {
    className: "rnftg-no-underline rnftg-text-black dark:rnftg-text-gray-200",
    href: href,
    target: "_blank",
    rel: "noopener"
  }, children);
};

var GalleryItem = function GalleryItem(_ref2) {
  var asset = _ref2.asset,
      index = _ref2.index,
      metadataIsVisible = _ref2.metadataIsVisible,
      hasLightbox = _ref2.hasLightbox,
      setLightboxIndex = _ref2.setLightboxIndex,
      hasExternalLinks = _ref2.hasExternalLinks,
      itemContainerStyle = _ref2.itemContainerStyle,
      imgContainerStyle = _ref2.imgContainerStyle;
  var assetTitle = getAssetTitle(asset);

  var renderAssetMedia = function renderAssetMedia() {
    // No media present -> render the name/tokenId as a placeholder.
    if (!asset.image_preview_url) {
      return React.createElement("div", {
        className: joinClassNames('rnftg-flex rnftg-flex-col rnftg-justify-center rnftg-items-center rnftg-w-full rnftg-h-full rnftg-cursor-pointer', 'rnftg-break-words rnftg-truncate rnftg-text-lg rnftg-font-semibold dark:rnftg-text-gray-200')
      }, assetTitle);
    }

    var assetMediaExt = asset.image_preview_url.split('.').pop();

    if (assetMediaExt === 'mp4') {
      return React.createElement("video", {
        className: joinClassNames('rnftg-w-full rnftg-h-full rnftg-object-cover rnftg-cursor-pointer', metadataIsVisible ? 'rnftg-rounded-t-2xl' : 'rnftg-rounded-2xl'),
        src: asset.image_preview_url,
        preload: "auto",
        controlsList: "nodownload",
        autoPlay: true,
        loop: true,
        playsInline: true
      });
    }

    return React.createElement("img", {
      className: joinClassNames('rnftg-w-full rnftg-h-full rnftg-object-cover rnftg-cursor-pointer', metadataIsVisible ? 'rnftg-rounded-t-2xl' : 'rnftg-rounded-2xl'),
      src: asset.image_preview_url,
      alt: asset.name,
      loading: "lazy"
    });
  };

  return React.createElement("article", {
    style: itemContainerStyle,
    className: "rnftg-item rnftg-rounded-2xl rnftg-bg-white dark:rnftg-bg-gray-800 rnftg-shadow-lg hover:rnftg-shadow-xl rnftg-transition rnftg-duration-300"
  }, React.createElement("div", {
    style: imgContainerStyle,
    className: "rnftg-item__img-wrapper"
  }, React.createElement("a", {
    className: "rnftg-no-underline rnftg-text-black dark:rnftg-text-gray-200",
    onClick: function onClick() {
      return setLightboxIndex(index);
    },
    href: "#lightbox-" + index
  }, renderAssetMedia())), metadataIsVisible && React.createElement("div", {
    className: "rnftg-p-4"
  }, React.createElement("div", {
    className: "rnftg-break-words rnftg-truncate rnftg-text-lg rnftg-font-semibold dark:rnftg-text-gray-200"
  }, hasExternalLinks ? React.createElement(ExternalLink, {
    href: asset.permalink
  }, assetTitle) : assetTitle), React.createElement("hr", {
    className: "rnftg-mx-2 rnftg-my-4 rnftg-border-gray-100 dark:rnftg-border-gray-900"
  }), React.createElement("div", {
    className: "rnftg-flex rnftg-items-center"
  }, asset.collection.image_url && React.createElement("img", {
    src: asset.collection.image_url,
    alt: asset.collection.name,
    className: "rnftg-w-8 rnftg-h-8 rnftg-mr-2 rnftg-rounded-full"
  }), React.createElement("div", {
    className: "rnftg-text-sm rnftg-font-semibold rnftg-truncate dark:rnftg-text-gray-200"
  }, hasExternalLinks ? React.createElement(ExternalLink, {
    href: "https://opensea.io/collection/" + asset.collection.slug
  }, asset.collection.name) : asset.collection.name))), hasLightbox && React.createElement(Lightbox, {
    index: index,
    asset: asset,
    setLightboxIndex: setLightboxIndex
  }));
};

var LoadMoreButton = function LoadMoreButton(_ref) {
  var onClick = _ref.onClick;
  return React.createElement("div", {
    className: "rnftg-flex rnftg-justify-center rnftg-items-center rnftg-p-6"
  }, React.createElement("button", {
    className: joinClassNames('rnftg-px-4 rnftg-py-2 rnftg-rounded-2xl rnftg-bg-transparent rnftg-text-black dark:rnftg-text-gray-200', 'rnftg-border rnftg-border-solid rnftg-border-black dark:rnftg-border-gray-200 rnftg-shadow-xl rnftg-cursor-pointer'),
    onClick: onClick
  }, "Load more"));
};

var OPENSEA_API_OFFSET = 50;
var resolveEnsDomain = /*#__PURE__*/function () {
  var _ref = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(ensDomainName) {
    var query, variables, result, _yield$result$json, data, address;

    return runtime_1.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            query = "\n  query lookup($name: String!) {\n    domains(where: { name: $name }) {\n      resolvedAddress {\n        id\n      }\n    }\n  }\n  ";
            variables = {
              name: ensDomainName
            };
            _context.prev = 2;
            _context.next = 5;
            return fetch('https://api.thegraph.com/subgraphs/name/ensdomains/ens', {
              method: 'POST',
              body: JSON.stringify({
                query: query,
                variables: variables
              })
            });

          case 5:
            result = _context.sent;
            _context.next = 8;
            return result.json();

          case 8:
            _yield$result$json = _context.sent;
            data = _yield$result$json.data;

            if (data.domains.length) {
              _context.next = 12;
              break;
            }

            throw new Error("Could not resolve " + ensDomainName + " via ENS.");

          case 12:
            address = data.domains[0].resolvedAddress.id;
            return _context.abrupt("return", address);

          case 16:
            _context.prev = 16;
            _context.t0 = _context["catch"](2);
            console.error(_context.t0);
            return _context.abrupt("return", null);

          case 20:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[2, 16]]);
  }));

  return function resolveEnsDomain(_x) {
    return _ref.apply(this, arguments);
  };
}();
var fetchOpenseaAssets = /*#__PURE__*/function () {
  var _ref2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee2(owner, offset) {
    var result, error, _yield$result$json2, assets;

    return runtime_1.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (offset === void 0) {
              offset = 0;
            }

            _context2.prev = 1;
            _context2.next = 4;
            return fetch("https://api.opensea.io/api/v1/assets?owner=" + owner + "&limit=50&offset=" + offset);

          case 4:
            result = _context2.sent;

            if (!(result.status !== 200)) {
              _context2.next = 10;
              break;
            }

            _context2.next = 8;
            return result.text();

          case 8:
            error = _context2.sent;
            throw new Error(error);

          case 10:
            _context2.next = 12;
            return result.json();

          case 12:
            _yield$result$json2 = _context2.sent;
            assets = _yield$result$json2.assets;
            return _context2.abrupt("return", assets);

          case 17:
            _context2.prev = 17;
            _context2.t0 = _context2["catch"](1);
            console.error('fetchAssets failed:', _context2.t0);
            return _context2.abrupt("return", []);

          case 21:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, null, [[1, 17]]);
  }));

  return function fetchOpenseaAssets(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();

var css_248z$2 = ".rnftg-mx-2{margin-left:.5rem;margin-right:.5rem}.rnftg-my-4{margin-top:1rem;margin-bottom:1rem}.rnftg-mr-2{margin-right:.5rem}.rnftg-flex{display:flex}.rnftg-grid{display:grid}.rnftg-h-8{height:2rem}.rnftg-h-full{height:100%}.rnftg-w-8{width:2rem}.rnftg-w-full{width:100%}@-webkit-keyframes rnftg-spin{to{transform:rotate(1turn)}}@keyframes rnftg-spin{to{transform:rotate(1turn)}}@-webkit-keyframes rnftg-ping{75%,to{transform:scale(2);opacity:0}}@keyframes rnftg-ping{75%,to{transform:scale(2);opacity:0}}@-webkit-keyframes rnftg-pulse{50%{opacity:.5}}@keyframes rnftg-pulse{50%{opacity:.5}}@-webkit-keyframes rnftg-bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}@keyframes rnftg-bounce{0%,to{transform:translateY(-25%);-webkit-animation-timing-function:cubic-bezier(.8,0,1,1);animation-timing-function:cubic-bezier(.8,0,1,1)}50%{transform:none;-webkit-animation-timing-function:cubic-bezier(0,0,.2,1);animation-timing-function:cubic-bezier(0,0,.2,1)}}.rnftg-cursor-pointer{cursor:pointer}.rnftg-grid-flow-row{grid-auto-flow:row}.rnftg-grid-flow-col{grid-auto-flow:column}.rnftg-grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.rnftg-flex-row{flex-direction:row}.rnftg-flex-col{flex-direction:column}.rnftg-items-center{align-items:center}.rnftg-justify-center{justify-content:center}.rnftg-gap-6{gap:1.5rem}.rnftg-overflow-auto{overflow:auto}.rnftg-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.rnftg-break-words{overflow-wrap:break-word}.rnftg-rounded-2xl{border-radius:1rem}.rnftg-rounded-full{border-radius:9999px}.rnftg-rounded-t-2xl{border-top-left-radius:1rem;border-top-right-radius:1rem}.rnftg-border{border-width:1px}.rnftg-border-solid{border-style:solid}.rnftg-border-black{--tw-border-opacity:1;border-color:rgba(0,0,0,var(--tw-border-opacity))}.rnftg-border-gray-100{--tw-border-opacity:1;border-color:rgba(243,244,246,var(--tw-border-opacity))}.rnftg-dark .dark\\:rnftg-border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.rnftg-dark .dark\\:rnftg-border-gray-900{--tw-border-opacity:1;border-color:rgba(17,24,39,var(--tw-border-opacity))}.rnftg-bg-transparent{background-color:transparent}.rnftg-bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.rnftg-bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.rnftg-dark .dark\\:rnftg-bg-gray-800{--tw-bg-opacity:1;background-color:rgba(31,41,55,var(--tw-bg-opacity))}.rnftg-dark .dark\\:rnftg-bg-gray-900{--tw-bg-opacity:1;background-color:rgba(17,24,39,var(--tw-bg-opacity))}.rnftg-object-cover{-o-object-fit:cover;object-fit:cover}.rnftg-p-4{padding:1rem}.rnftg-p-6{padding:1.5rem}.rnftg-px-4{padding-left:1rem;padding-right:1rem}.rnftg-py-2{padding-top:.5rem;padding-bottom:.5rem}.rnftg-text-sm{font-size:.875rem;line-height:1.25rem}.rnftg-text-lg{font-size:1.125rem;line-height:1.75rem}.rnftg-font-semibold{font-weight:600}.rnftg-text-black{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.rnftg-text-gray-200{--tw-text-opacity:1;color:rgba(229,231,235,var(--tw-text-opacity))}.rnftg-text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.rnftg-dark .dark\\:rnftg-text-gray-200{--tw-text-opacity:1;color:rgba(229,231,235,var(--tw-text-opacity))}.rnftg-no-underline{text-decoration:none}*,:after,:before{--tw-shadow:0 0 transparent}.rnftg-shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px rgba(0,0,0,0.05);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}.hover\\:rnftg-shadow-xl:hover,.rnftg-shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,0.1),0 10px 10px -5px rgba(0,0,0,0.04);box-shadow:var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow)}*,:after,:before{--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,0.5);--tw-ring-offset-shadow:0 0 transparent;--tw-ring-shadow:0 0 transparent}.rnftg-transition{transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:background-color,border-color,color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.rnftg-duration-300{transition-duration:.3s}@media (min-width:768px){.md\\:rnftg-grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\\:rnftg-grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}}@media (min-width:1280px){.xl\\:rnftg-grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}}";
styleInject(css_248z$2,{"insertAt":"top"});

var css_248z$3 = ".rnftg-loader{font-size:20px;margin:100px auto;width:1em;height:1em;border-radius:50%;position:relative;text-indent:-9999em;-webkit-animation:load 1.3s linear infinite;animation:load 1.3s linear infinite;transform:translateZ(0)}@-webkit-keyframes load{0%,to{box-shadow:0 -3em 0 .2em,2em -2em 0 0,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 0}12.5%{box-shadow:0 -3em 0 0,2em -2em 0 .2em,3em 0 0 0,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}25%{box-shadow:0 -3em 0 -.5em,2em -2em 0 0,3em 0 0 .2em,2em 2em 0 0,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}37.5%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 0,2em 2em 0 .2em,0 3em 0 0,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}50%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 0,0 3em 0 .2em,-2em 2em 0 0,-3em 0 0 -1em,-2em -2em 0 -1em}62.5%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 0,-2em 2em 0 .2em,-3em 0 0 0,-2em -2em 0 -1em}75%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 0,-3em 0 0 .2em,-2em -2em 0 0}87.5%{box-shadow:0 -3em 0 0,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 0,-3em 0 0 0,-2em -2em 0 .2em}}@keyframes load{0%,to{box-shadow:0 -3em 0 .2em,2em -2em 0 0,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 0}12.5%{box-shadow:0 -3em 0 0,2em -2em 0 .2em,3em 0 0 0,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}25%{box-shadow:0 -3em 0 -.5em,2em -2em 0 0,3em 0 0 .2em,2em 2em 0 0,0 3em 0 -1em,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}37.5%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 0,2em 2em 0 .2em,0 3em 0 0,-2em 2em 0 -1em,-3em 0 0 -1em,-2em -2em 0 -1em}50%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 0,0 3em 0 .2em,-2em 2em 0 0,-3em 0 0 -1em,-2em -2em 0 -1em}62.5%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 0,-2em 2em 0 .2em,-3em 0 0 0,-2em -2em 0 -1em}75%{box-shadow:0 -3em 0 -1em,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 0,-3em 0 0 .2em,-2em -2em 0 0}87.5%{box-shadow:0 -3em 0 0,2em -2em 0 -1em,3em 0 0 -1em,2em 2em 0 -1em,0 3em 0 -1em,-2em 2em 0 0,-3em 0 0 0,-2em -2em 0 .2em}}";
styleInject(css_248z$3,{"insertAt":"top"});

var NftGallery = function NftGallery(_ref) {
  var _ref$ownerAddress = _ref.ownerAddress,
      ownerAddress = _ref$ownerAddress === void 0 ? '' : _ref$ownerAddress,
      _ref$darkMode = _ref.darkMode,
      darkMode = _ref$darkMode === void 0 ? false : _ref$darkMode,
      _ref$metadataIsVisibl = _ref.metadataIsVisible,
      metadataIsVisible = _ref$metadataIsVisibl === void 0 ? true : _ref$metadataIsVisibl,
      _ref$showcaseMode = _ref.showcaseMode,
      showcaseMode = _ref$showcaseMode === void 0 ? false : _ref$showcaseMode,
      showcaseItemIds = _ref.showcaseItemIds,
      _ref$hasLightbox = _ref.hasLightbox,
      hasLightbox = _ref$hasLightbox === void 0 ? true : _ref$hasLightbox,
      _ref$hasExternalLinks = _ref.hasExternalLinks,
      hasExternalLinks = _ref$hasExternalLinks === void 0 ? true : _ref$hasExternalLinks,
      _ref$isInline = _ref.isInline,
      isInline = _ref$isInline === void 0 ? false : _ref$isInline,
      galleryContainerStyle = _ref.galleryContainerStyle,
      itemContainerStyle = _ref.itemContainerStyle,
      imgContainerStyle = _ref.imgContainerStyle;

  var _useState = useState([]),
      assets = _useState[0],
      setAssets = _useState[1];

  var _useState2 = useState([]),
      showcaseAssets = _useState2[0],
      setShowcaseAssets = _useState2[1];

  var _useState3 = useState(0),
      currentOffset = _useState3[0],
      setCurrentOffset = _useState3[1];

  var _useState4 = useState(false),
      canLoadMore = _useState4[0],
      setCanLoadMore = _useState4[1];

  var _useState5 = useState(false),
      isLoading = _useState5[0],
      setIsLoading = _useState5[1];

  var _useState6 = useState(0),
      lightboxIndex = _useState6[0],
      setLightboxIndex = _useState6[1];

  var displayedAssets = showcaseMode ? showcaseAssets : assets;

  var loadAssets = /*#__PURE__*/function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/runtime_1.mark(function _callee(ownerAddress, offset) {
      var resolvedOwner, rawAssets;
      return runtime_1.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (assets.length === 0) setIsLoading(true);

              if (!isEnsDomain(ownerAddress)) {
                _context.next = 7;
                break;
              }

              _context.next = 4;
              return resolveEnsDomain(ownerAddress);

            case 4:
              _context.t0 = _context.sent;
              _context.next = 8;
              break;

            case 7:
              _context.t0 = ownerAddress;

            case 8:
              resolvedOwner = _context.t0;
              _context.next = 11;
              return fetchOpenseaAssets(resolvedOwner, offset);

            case 11:
              rawAssets = _context.sent;
              setAssets(function (prevAssets) {
                return [].concat(prevAssets, rawAssets);
              });
              setCanLoadMore(rawAssets.length === OPENSEA_API_OFFSET);
              if (assets.length === 0) setIsLoading(false);

            case 15:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function loadAssets(_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }();

  var updateShowcaseAssets = function updateShowcaseAssets(allAssets, itemIds) {
    var nextShowcaseAssets = allAssets.filter(function (asset) {
      return itemIds.includes(asset.asset_contract.address + "/" + asset.token_id);
    });
    setShowcaseAssets(nextShowcaseAssets);
  }; // TODO: Move into `Lightbox` component once its refactored to being a singleton.


  var handleKeydownEvent = function handleKeydownEvent(evt) {
    var hasActiveLightbox = window.location.hash.includes('lightbox-') && window.location.hash !== '#lightbox-untarget';

    if (!hasActiveLightbox) {
      return;
    }

    var decreaseLightboxIndex = function decreaseLightboxIndex() {
      // Do nothing if we're at minimum index already.
      if (lightboxIndex === 0) return;
      var nextIndex = lightboxIndex - 1;
      setLightboxIndex(nextIndex);
      window.location.assign("#lightbox-" + nextIndex);
    };

    var increaseLightboxIndex = function increaseLightboxIndex() {
      // Do nothing if we're at maximum index already.
      if (lightboxIndex === assets.length - 1) return;
      var nextIndex = lightboxIndex + 1;
      setLightboxIndex(nextIndex);
      window.location.assign("#lightbox-" + nextIndex);
    };

    switch (evt.key) {
      case 'ArrowLeft':
        return decreaseLightboxIndex();

      case 'ArrowRight':
        return increaseLightboxIndex();

      case 'Escape':
        return window.location.assign("#lightbox-untarget");
    }
  };

  useEffect(function () {
    loadAssets(ownerAddress, currentOffset);
  }, [ownerAddress, currentOffset]);
  useEffect(function () {
    if (assets.length !== 0 && showcaseMode && Array.isArray(showcaseItemIds)) {
      updateShowcaseAssets(assets, showcaseItemIds);
    }
  }, [assets, showcaseMode, showcaseItemIds]);
  useEffect(function () {
    document.addEventListener('keydown', handleKeydownEvent);
    return function () {
      document.removeEventListener('keydown', handleKeydownEvent);
    };
  }, [assets, lightboxIndex]);
  return React.createElement("div", {
    className: joinClassNames(darkMode ? 'rnftg-dark' : '', 'rnftg-h-full')
  }, React.createElement("div", {
    style: galleryContainerStyle,
    className: joinClassNames('rnftg-h-full rnftg-p-6 rnftg-overflow-auto rnftg-bg-gray-50 dark:rnftg-bg-gray-900', isInline ? 'rnftg--inline' : '')
  }, isLoading ? React.createElement("div", {
    className: "rnftg-flex rnftg-justify-center rnftg-items-center rnftg-h-full dark:rnftg-text-gray-200"
  }, React.createElement("div", {
    className: "rnftg-loader rnftg-text-gray-800 dark:rnftg-text-gray-200"
  })) : React.createElement("div", {
    className: joinClassNames('rnftg-flex', isInline ? 'rnftg-flex-row' : 'rnftg-flex-col')
  }, React.createElement("div", {
    className: joinClassNames('rnftg-grid rnftg-gap-6', isInline ? 'rnftg-grid-flow-col' : 'rnftg-grid-flow-row rnftg-grid-cols-1 md:rnftg-grid-cols-2 lg:rnftg-grid-cols-3 xl:rnftg-grid-cols-4')
  }, displayedAssets.map(function (asset, index) {
    return React.createElement(GalleryItem, {
      key: asset.id,
      index: index,
      asset: asset,
      metadataIsVisible: metadataIsVisible,
      hasLightbox: hasLightbox,
      setLightboxIndex: setLightboxIndex,
      hasExternalLinks: hasExternalLinks,
      itemContainerStyle: itemContainerStyle,
      imgContainerStyle: imgContainerStyle
    });
  })), canLoadMore && React.createElement(LoadMoreButton, {
    onClick: function onClick() {
      setCurrentOffset(function (prevOffset) {
        return prevOffset + OPENSEA_API_OFFSET;
      });
    }
  }))));
};

export { NftGallery };
//# sourceMappingURL=react-nft-gallery.esm.js.map
